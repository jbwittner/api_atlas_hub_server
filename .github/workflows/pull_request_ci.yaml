---
name: Pull Request CI
"on":
  pull_request:
    branches:
    - develop
concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref }}"
  cancel-in-progress: true
jobs:
  build-install-application:
    runs-on: ubuntu-22.04
    name: Build and install application
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup action
      uses: ./.github/actions/setup-env
    - name: Install java part
      run: mvn -B -DskipTests clean install -Dcheckstyle.skip
    - name: Offline Package
      run: mvn -B dependency:go-offline
  check-spotless:
    runs-on: ubuntu-22.04
    name: Check spotless
    needs:
    - build-install-application
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup action
      uses: ./.github/actions/setup-env
    - name: Spotless check
      run: mvn -B spotless:check
  checkstyle:
    runs-on: ubuntu-22.04
    name: Check checkstyle
    needs:
    - build-install-application
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup action
      uses: ./.github/actions/setup-env
    - name: Checkstyle check
      run: mvn -B checkstyle:checkstyle
  tests_sonar_domain:
    runs-on: ubuntu-22.04
    name: Test and analyse domain
    env:
      SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
    needs:
    - check-spotless
    - checkstyle
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup action
      uses: ./.github/actions/setup-env
    - name: Test and analyse
      working-directory: domain
      run: mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  tests_sonar_infrastructure_api_rest:
    runs-on: ubuntu-22.04
    name: Test and analyse infrastructure (api rest)
    env:
      SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
    needs:
    - check-spotless
    - checkstyle
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup action
      uses: ./.github/actions/setup-env
    - name: Test and analyse
      working-directory: infrastructure/api-rest
      run: mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  tests_sonar_infrastructure_spi_jpa:
    runs-on: ubuntu-22.04
    name: Test and analyse infrastructure (spi jpa)
    env:
      SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
    needs:
    - check-spotless
    - checkstyle
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup action
      uses: ./.github/actions/setup-env
    - name: Test and analyse
      working-directory: infrastructure/spi-jpa
      run: mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  tests_sonar_application:
    runs-on: ubuntu-22.04
    name: Test and analyse application
    env:
      SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
    needs:
    - check-spotless
    - checkstyle
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup action
      uses: ./.github/actions/setup-env
    - name: Test and analyse
      working-directory: application
      run: mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  build_docker:
    runs-on: ubuntu-22.04
    needs:
    - tests_sonar_domain
    - tests_sonar_infrastructure_api_rest
    - tests_sonar_infrastructure_spi_jpa
    - tests_sonar_application
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: docker/Dockerfile
        platforms: linux/amd64
        push: false
